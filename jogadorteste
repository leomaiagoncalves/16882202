#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <time.h>

// Conversão do caractere de valor para número
int valor_para_num(char c) {
    if (c >= '2' && c <= '9') return c - '0';
    if (c == 'T') return 10;
    if (c == 'J') return 11;
    if (c == 'Q') return 12;
    if (c == 'K') return 13;
    if (c == 'A') return 1;
    return 0;
}

// Conversão de naipe para peso de força
int naipe_para_peso(char naipe) {
    // Paus (C) > Espadas (S) > Copas (H) > Ouros (D)
    switch (naipe) {
        case 'C': return 4; // Paus
        case 'S': return 3; // Espadas
        case 'H': return 2; // Copas
        case 'D': return 1; // Ouros
        default: return 0;
    }
}

// Escolhe a melhor carta verdadeira (valor correto + naipe mais forte)
int escolher_carta_real(char mao[5][3], char valor_esperado) {
    int melhor_indice = -1;
    int melhor_naipe = -1;

    for (int i = 0; i < 5; i++) {
        if (mao[i][0] == valor_esperado) {
            int peso = naipe_para_peso(mao[i][1]);
            if (peso > melhor_naipe) {
                melhor_naipe = peso;
                melhor_indice = i;
            }
        }
    }
    return melhor_indice;
}

// Escolhe melhor carta de blefe (valor próximo e naipe fraco)
int escolher_carta_blefe(char mao[5][3], char valor_esperado) {
    int valor_ref = valor_para_num(valor_esperado);
    int melhor_indice = 0;
    int menor_dif = 100;

    for (int i = 0; i < 5; i++) {
        int valor = valor_para_num(mao[i][0]);
        int dif = abs(valor - valor_ref);

        int peso = naipe_para_peso(mao[i][1]);

        // Menor diferença de valor, e prefere naipes fracos (menos suspeita)
        if (dif < menor_dif || (dif == menor_dif && peso < naipe_para_peso(mao[melhor_indice][1]))) {
            menor_dif = dif;
            melhor_indice = i;
        }
    }

    return melhor_indice;
}

int main() {
    char carta_rodada = '5';  // Carta que todos devem jogar
    char mao[5][3] = { "7H", "3C", "5S", "9D", "5D" };
    int indice;

    srand(time(NULL));

    // Verifica se tem carta verdadeira
    indice = escolher_carta_real(mao, carta_rodada);

    if (indice != -1) {
        printf("JOGADOR joga %s (verdade)\n", mao[indice]);
    } else {
        indice = escolher_carta_blefe(mao, carta_rodada);
        printf("JOGADOR joga %s (blefe)\n", mao[indice]);
    }

    return 0;
}
